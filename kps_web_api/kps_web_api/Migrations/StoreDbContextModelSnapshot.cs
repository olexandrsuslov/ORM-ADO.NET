// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kps_web_api.Context;

#nullable disable

namespace kpswebapi.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    partial class StoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kps_web_api.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId")
                        .HasName("PRIMARY");

                    b.ToTable("Customers", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("EmployeeId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "RoleID");

                    b.ToTable("Employees", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.EmployeeRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("EmployeeRoles", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerId" }, "CustomerID");

                    b.ToTable("Orders", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderDetailId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "OrderID");

                    b.HasIndex(new[] { "ProductId" }, "ProductID");

                    b.ToTable("OrderDetails", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<int?>("CouponId")
                        .HasColumnType("int")
                        .HasColumnName("CouponID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    b.Property<decimal?>("Price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "CategoryID");

                    b.HasIndex(new[] { "CouponId" }, "CouponID");

                    b.HasIndex(new[] { "OrderDetailId" }, "OrderDetailID");

                    b.ToTable("Products", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PRIMARY");

                    b.ToTable("ProductCategories", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.SalesCoupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CouponID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"));

                    b.Property<string>("CouponCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasPrecision(5)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("date");

                    b.HasKey("CouponId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CouponCode" }, "CouponCode")
                        .IsUnique()
                        .HasFilter("[CouponCode] IS NOT NULL");

                    b.ToTable("SalesCoupons", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierId")
                        .HasName("PRIMARY");

                    b.ToTable("Suppliers", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.SupplierProduct", b =>
                {
                    b.Property<int>("SupplierProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierProductId"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<decimal?>("SupplierPrice")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SupplierProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "ProductID");

                    b.HasIndex(new[] { "SupplierId" }, "SupplierID");

                    b.ToTable("SupplierProducts", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.UserAuthentication", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int")
                        .HasColumnName("UserRoleID");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserName" }, "UserName")
                        .IsUnique();

                    b.HasIndex(new[] { "UserRoleId" }, "UserRoleID");

                    b.ToTable("UserAuthentication", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserRoleId")
                        .HasName("PRIMARY");

                    b.ToTable("UserRoles", "HouseholdStore");
                });

            modelBuilder.Entity("kps_web_api.Entities.Employee", b =>
                {
                    b.HasOne("kps_web_api.Entities.EmployeeRole", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("employees_ibfk_1");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("kps_web_api.Entities.Order", b =>
                {
                    b.HasOne("kps_web_api.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("orders_ibfk_1");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("kps_web_api.Entities.OrderDetail", b =>
                {
                    b.HasOne("kps_web_api.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("orderdetails_ibfk_1");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("kps_web_api.Entities.Product", b =>
                {
                    b.HasOne("kps_web_api.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("products_ibfk_1");

                    b.HasOne("kps_web_api.Entities.SalesCoupon", "Coupon")
                        .WithMany("Products")
                        .HasForeignKey("CouponId")
                        .HasConstraintName("products_ibfk_2");

                    b.HasOne("kps_web_api.Entities.OrderDetail", "OrderDetail")
                        .WithMany("Products")
                        .HasForeignKey("OrderDetailId")
                        .HasConstraintName("products_ibfk_3");

                    b.Navigation("Category");

                    b.Navigation("Coupon");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("kps_web_api.Entities.SupplierProduct", b =>
                {
                    b.HasOne("kps_web_api.Entities.Product", "Product")
                        .WithMany("SupplierProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("supplierproducts_ibfk_2");

                    b.HasOne("kps_web_api.Entities.Supplier", "Supplier")
                        .WithMany("SupplierProducts")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("supplierproducts_ibfk_1");

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("kps_web_api.Entities.UserAuthentication", b =>
                {
                    b.HasOne("kps_web_api.Entities.UserRole", "UserRole")
                        .WithMany("UserAuthentications")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("userauthentication_ibfk_1");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("kps_web_api.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("kps_web_api.Entities.EmployeeRole", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("kps_web_api.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("kps_web_api.Entities.OrderDetail", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("kps_web_api.Entities.Product", b =>
                {
                    b.Navigation("SupplierProducts");
                });

            modelBuilder.Entity("kps_web_api.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("kps_web_api.Entities.SalesCoupon", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("kps_web_api.Entities.Supplier", b =>
                {
                    b.Navigation("SupplierProducts");
                });

            modelBuilder.Entity("kps_web_api.Entities.UserRole", b =>
                {
                    b.Navigation("UserAuthentications");
                });
#pragma warning restore 612, 618
        }
    }
}
